# this config needs haproxy-1.7

global
	#log 127.0.0.1	local0
	log 127.0.0.1	local1 notice
	#log loghost	local0 info
	maxconn 4096
	#chroot /usr/share/haproxy
	user haproxy
	group haproxy
	daemon
	#debug
	#quiet
        #tune.ssl.default-dh-param 2048

        stats socket /tmp/haproxy.stat mode 0666 level admin

   	spread-checks 5

        tune.ssl.default-dh-param 2048

        tune.bufsize 20480
        tune.maxrewrite 2048

# Sets the size of the global SSL session cache, in a number of blocks. A block
# is large enough to contain an encoded session without peer certificate.
# An encoded session with peer certificate is stored in multiple blocks
# depending on the size of the peer certificate. A block use approximatively
# 200 bytes of memory. The default value may be forced at build time, otherwise
# defaults to 20000.  When the cache is full, the most idle entries are purged
# and reassigned. Higher values reduce the occurrence of such a purge, hence
# the number of CPU-intensive SSL handshakes by ensuring that all users keep
# their session as long as possible. All entries are pre-allocated upon startup
# and are shared between all processes if "nbproc" is greater than 1. Setting
# this value to 0 disables the SSL session cache.
        tune.ssl.cachesize 200000
#   Sets how long a cached SSL session may remain valid. This time is expressed
# in seconds and defaults to 300 (5 mn). It is important to understand that it
# does not guarantee that sessions will last that long, because if the cache is
# full, the longest idle sessions will be purged despite their configured
# lifetime. The real usefulness of this setting is to prevent sessions from
# being used for too long.
        tune.ssl.lifetime 9000

#       stats socket /tmp/haproxy.stat mode 0666 level admin
#       stats bind-process 1



defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	retries	3
	option redispatch
	maxconn	2000
	timeout connect	5000
	timeout client	50000
	timeout server	50000

# Host HA-Proxy's web stats on Port 81.
listen HAProxy-Statistics
    bind *:81
    mode http
    option httplog
    option httpclose
    stats enable
    stats uri /haproxy?stats
    stats refresh 20s
    stats show-node
    stats show-legends
    stats show-desc StoreSsystems SSL router
    stats auth apadmin:appassword
    timeout connect	5000
    timeout client	50000
    timeout server	50000

#frontend f_web_ssl
#  #option forwardfor
#  #option httplog
#
# # ciphers ECDHE-RSA-AES256-SHA:RC4-SHA:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM
# # ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS:!AES256
# #bind 37.188.125.6:443 ssl crt /etc/haproxy/default.pem crt /etc/haproxy/certs.d ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4;
#  bind 176.58.111.215:443 ssl crt /etc/haproxy/default.pem crt /etc/haproxy/certs.d ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
#
#  reqadd X-Forwarded-Proto:\ https

# use_backend admin_tc_web if { hdr(host) -i admin.tapcrowd.com }

#  default_backend admin_tc_web

frontend f_web_ssl
  #option forwardfor
  #2option httplog
  #bind-process 1 2 3 4

  bind 176.58.111.215:443 ssl crt /etc/haproxy/default.pem crt /etc/haproxy/certs.d ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

  acl endpoint-php-easteregg url_sub PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000
  acl endpoint-php-easteregg url_sub PHPE9568F36-D428-11d2-A769-00AA001ACF42
  acl endpoint-php-easteregg url_sub PHPE9568F34-D428-11d2-A769-00AA001ACF42
  acl endpoint-php-easteregg url_sub PHPE9568F35-D428-11d2-A769-00AA001ACF42

  http-request deny if endpoint-php-easteregg

  reqadd X-Forwarded-Proto:\ https

  acl letsencrypt path_beg /.well-known/acme-challenge

  use_backend lets_web if letsencrypt

  use_backend aptum_web if { hdr(host) -i icar-import.osm.be }
  use_backend aptum_web if { hdr(host) -i aptum.bitless.be }
  use_backend aptum_web if { hdr(host) -i agivdata.grbosm.site }
  use_backend welcome_web if { hdr(host) -i osm.devtesting.rocks }

  default_backend admin_tc_web

frontend eventservers 
    bind 176.58.111.215:80
    mode http
    option socket-stats
    option httplog
    option httpclose

    acl endpoint-php-easteregg url_sub PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000
    acl endpoint-php-easteregg url_sub PHPE9568F36-D428-11d2-A769-00AA001ACF42
    acl endpoint-php-easteregg url_sub PHPE9568F34-D428-11d2-A769-00AA001ACF42
    acl endpoint-php-easteregg url_sub PHPE9568F35-D428-11d2-A769-00AA001ACF42

    http-request deny if endpoint-php-easteregg

    acl letsencrypt path_beg /.well-known/acme-challenge

    use_backend lets_web if letsencrypt

    use_backend aptum_web if { hdr(host) -i icar-import.osm.be }
    use_backend aptum_web if { hdr(host) -i aptum.bitless.be }
    use_backend aptum_web if { hdr(host) -i agivdata.grbosm.site }
    use_backend welcome_web if { hdr(host) -i osm.devtesting.rocks }

    default_backend admin_tc_web

backend aptum_web
    option httpclose               # disable keep-alive
    option forwardfor
    option httplog
#    option httpchk

    mode http
    balance roundrobin
    option forwardfor

    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

    #http-check disable-on-404
    
    server nging_local 176.58.111.215:88 maxconn 50 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3
    #server nging_remote 178.79.176.26:80 maxconn 50 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3

backend welcome_web
    option httpclose               # disable keep-alive
    option forwardfor
    option httplog
#    option httpchk

    mode http
    balance roundrobin
    option forwardfor

    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

    #http-check disable-on-404
    
    #server nging_local 176.58.111.215:88 maxconn 50 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3
    #server nging_remote 178.79.176.26:80 maxconn 50 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3
    server ebds_server 176.58.100.200:80 maxconn 50 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3

# This order seems to matter! ->

backend admin_tc_web
    #option nolinger
    option httpclose               # disable keep-alive
    option forwardfor
    option httplog

    mode http
    balance roundrobin
    option forwardfor

    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    
    server nging_local 176.58.111.215:88 maxconn 50 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3
    server nging_remote 178.79.176.26:80 maxconn 50 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3

backend lets_web
    #option nolinger
    option httpclose               # disable keep-alive
    option forwardfor
    option httplog

    mode http
    balance roundrobin
    option forwardfor

    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

    # http://agivdata.grbosm.site/.well-known/acme-challenge/rzD2cSv1Yh5UT8hYvIXP_NvQpz4Ehwg72fKmYOfeuYM
    
    server smtp_server 109.74.205.136:83 maxconn 50 minconn 5 weight 50 maxqueue 10 check inter 90000 fastinter 2000 downinter 10000 rise 2 fall 3

# This order seems to matter! ->

# 1 Private key certificate
# 2 Public key certificate
# 3 Intermediate CA certificate(s)
# 4 Optional but recommended: DH primes

# for venmeer-boxray:

# cat /etc/letsencrypt/live/agivdata.grbosm.site/privkey.pem /etc/letsencrypt/live/agivdata.grbosm.site/cert.pem /etc/letsencrypt/live/agivdata.grbosm.site/chain.pem /etc/haproxy/dhparam.pem > /etc/haproxy/certs.d/venray-boxmeer.pem

# This order seems to matter! ->

# 1 Private key certificate
# 2 Public key certificate
# 3 Intermediate CA certificate(s)
# 4 Optional but recommended: DH primes

# for venmeer-boxray:

# cat /etc/letsencrypt/live/agivdata.grbosm.site/privkey.pem /etc/letsencrypt/live/agivdata.grbosm.site/cert.pem /etc/letsencrypt/live/agivdata.grbosm.site/chain.pem /etc/haproxy/dhparam.pem > /etc/haproxy/certs.d/venray-boxmeer.pem
